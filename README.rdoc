== CryptoGost3410

Ruby library implementing GOST 34.10-2012 ECC signature algorithms.
Forked from https://github.com/wilddima/crypto_gost.

=== Installation

Add this line to your application's Gemfile:

  gem 'crypto_gost3410'

And then execute:

  $ bundle

Or install it yourself as:

  $ gem install crypto_gost3410

=== Usage

  # All input and output data for CryptoGost3410 are big numbers only, not byte arrays nor strings.
  # As so, input Stribog message hash shoud be converted to big number too.
  # Note: You need to reverse input/output bytes for Stribog gem to get right GOST 3411-2012 digest.

  require 'stribog'
  require 'crypto_gost3410'

  group = CryptoGost3410::Group::Gost256cpA
  if group.opts[:name].start_with?("Gost512") then size = 512 else size = 256 end

  private_key = group.generate_private_key
  puts "private_key: #{private_key}"

  public_key = group.generate_public_key private_key
  puts "public_key.x: #{public_key.x}"
  puts "public_key.y: #{public_key.y}"

  message = 'ruby'
  hash = Stribog::CreateHash.new(message.reverse).(size).dec
  puts "hash: #{hash}"

  signature = CryptoGost3410::Generator.new(hash, group).(private_key)
  # signature = CryptoGost3410::Generator.new(hash, group).call(private_key)
  puts "signature.r: #{signature.r}"
  puts "signature.s: #{signature.s}"

  signature_ok = CryptoGost3410::Verifier.new(hash, group).(public_key, signature)
  # CryptoGost3410::Verifier.new(hash, group).call(public_key, signature)
  puts "signature_ok: #{signature_ok}"

List of added elliptic curves:

  Gost256test
  Gost256cpA
  Gost256cpB
  Gost256cpC
  Gost256tc26A
  Gost512test
  Gost512tc26A
  Gost512tc26B
  Gost512tc26C

=== Thanks

Thanks to WildDima for root crypto_gost project on GitHub at https://github.com/wilddima/crypto_gost.

=== Contributing

Bug reports and pull requests are welcome on GitHub at https://github.com/vblazhnovgit/crypto_gost3410. This project is intended to be a safe, welcoming space for collaboration, and contributors are expected to adhere to the [Contributor Covenant](http://contributor-covenant.org) code of conduct.


=== License

The gem is available as open source under the terms of the [MIT License](http://opensource.org/licenses/MIT).
